# This code is licensed under the MIT License (see LICENSE file for details)
# MATH FUNCTIONS AND VARS
fn add(a, b) {
    a + b
}
fn sub(a, b) {
    a - b
}
fn mul(a, b) {
    a * b
}
fn div(a, b) {
    a / b
}
fn mod(a, b) {
    a % b
}
fn floor(a) {
    a // 1
}
fn floordiv(a, b) {
    a // b
}
fn ceil(a) {
    a // 1 + 1
}
fn pow(a, b) {
    a**b
}

fn sqrt(a) {
    a**0.5
}

fn log(a, b) {
    ln(a) / ln(b)
}

fn ln(a) {
    let x = 1.0
    let y = 0.0
    let i = 0
    while i < 100 {
        y = x
        x = y - (y**2 - a) / (2 * y)
        i = i + 1
    }
    x
}

# CONSTANTS
let pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821
let e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746
let tau = pi * 2
let phi = (1 + sqrt(5)) / 2
# square roots can be calculated with the sqrt function so no constants for them
let sqrt2 = sqrt(2)
let sqrt3 = sqrt(3)

# TRIGONOMETRY
fn sin(a) {
    a = a % tau
    let x = a
    let y = 0.0
    let i = 0
    while i < 100 {
        y = x
        x = y - (y**3 - a) / (3 * y**2)
        i = i + 1
    }
    x
}

fn cos(a) {
    a = a % tau
    let x = 1.0
    let y = 0.0
    let i = 0
    while i < 100 {
        y = x
        x = y - (y**3 - a) / (3 * y**2)
        i = i + 1
    }
    x
}

fn tan(a) {
    sin(a) / cos(a)
}

fn asin(a) {
    let x = a
    let y = 0.0
    let i = 0
    while i < 100 {
        y = x
        x = y - (y**3 - a) / (3 * y**2)
        i = i + 1
    }
    x
}

fn acos(a) {
    pi / 2 - asin(a)
}

fn atan(a) {
    let x = a
    let y = 0.0
    let i = 0
    while i < 100 {
        y = x
        x = y - (y**3 - a) / (3 * y**2)
        i = i + 1
    }
    x
}
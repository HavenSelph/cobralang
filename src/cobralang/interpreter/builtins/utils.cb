fn join(val, list) {
    if (len(list) == 0) {
        return ""
    }
    let i = 1
    let str = list[0]
    while (i < len(list)) {
        str += val + list[i]
        i += 1
    }
    return str
}

fn split(val, str) {
    let list = []
    let start = 0
    let i = 0
    while i < len(str) {
        if (str[i] == val) {
            append(list, str[start:i])
            start = i + 1
        }
        i += 1
    }
    append(list, str[start:len(str)])
    return list
}

fn sort(list) {
    let i = 0
    while (i < len(list)) {
        let j = i + 1
        while (j < len(list)) {
            if (list[i] > list[j]) {
                let temp = list[i]
                list[i] = list[j]
                list[j] = temp
            }
            j += 1
        }
        i += 1
    }
    return list
}

fn sum(list) {
    let i = 0
    let total = 0
    while (i < len(list)) {
        total += list[i]
        i += 1
    }
    return total
}

fn reverse(list) {
    let i = 0
    let j = len(list) - 1
    while (i < j) {
        let temp = list[i]
        list[i] = list[j]
        list[j] = temp
        i += 1
        j -= 1
    }
    return list
}
